name: ci

on:
  pull_request:
    branches: [master, develop, alpha, beta]
  workflow_dispatch:

jobs:
  build:
    name: Running project
    if:
      "!contains(toJSON(github.event.commits.*.message), 'chore(release):') &&
      github.event.pull_request.draft != true"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14]
    env:
      CI: true

    steps:
      - uses: actions/checkout@v2

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules 💾
        uses: actions/cache@v2
        id: cache-modules
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          # **/node_modules
          key:
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-

      - name: Configure npm 🔑
        run: |
          echo "//npm.pkg.github.com/:_authToken=$GH_TOKEN" > .npmrc
          echo '@trixtateam:registry=https://npm.pkg.github.com' >> .npmrc
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Increase watchers
        run:
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf
          && sudo sysctl -p

      - name: Install 💿
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Build Library 🔨
        run: yarn build

      - name: Lint ✏️
        run: yarn lint

      - name: Test 🧪
        run: yarn test:no-coverage

      - name: Yarn Lock Changes 📋
        uses: Simek/yarn-lock-changes@main
        with:
          updateComment: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}
