name: publish-release

on:
  push:
    branches:
      - master

  workflow_dispatch:

jobs:
  publish-release:
    name: Running release
    if:
      "contains(toJSON(github.event.commits.*.message), 'chore(release):
      @trixtateam/phoenix-to-redux')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14]
    env:
      CI: true

    steps:
      - uses: actions/checkout@v2

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules ðŸ’¾
        uses: actions/cache@v2
        id: cache-modules
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key:
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-

      - name: Configure npm ðŸ”‘
        run: |
          echo "//npm.pkg.github.com/:_authToken=$GH_TOKEN" > .npmrc
          echo '@trixtateam:registry=https://npm.pkg.github.com' >> .npmrc
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Install ðŸ’¿
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Build library ðŸ”¨
        run: yarn build
      # Get the tag of the release just created
      - name: Find Tag
        id: tagger
        uses: digital-ai/query-tag-action@v2
        with:
          exclude: '*-rc*'
          commit-ish: 'HEAD'
          exact-match: 'true'

      # Create Release Branch
      - name: Create Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release/${{ steps.tagger.outputs.tag }}'
