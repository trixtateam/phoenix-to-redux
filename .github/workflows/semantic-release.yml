name: semantic-release

on:
  push:
    branches:
       - master
  workflow_dispatch:

jobs:
  semantic-release:
    name: Running semantic-release
    if: "!contains(toJSON(github.event.commits.*.message), 'chore(release):')"
    runs-on: ubuntu-latest
    env:
      CI: true

    steps:
      - name: ðŸ›’ Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: ðŸ’¿ Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'

      - name: ðŸ’¾ Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: ðŸ’¾ Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Get Current Pull Request ðŸ“‘
        uses: 8BitJonny/gh-get-current-pr@1.1.0
        id: pr
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          filterOutClosed: true

      - name: ðŸ§© Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Build library ðŸ”¨
        run: yarn build

      - name: ðŸ“¦ Release package
        run: yarn release --ignore-packages=packages/docs/**
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - if: always()
        run: rm .npmrc


