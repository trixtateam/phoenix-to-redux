name: semantic-release

on:
  push:
    branches:
       - master
  workflow_dispatch:

jobs:
  semantic-release:
    name: Running semantic-release
    if: "!contains(toJSON(github.event.commits.*.message), 'chore(release):')"
    runs-on: ubuntu-latest
    env:
      CI: true

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: 'https://npm.pkg.github.com'

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules ðŸ’¾
        uses: actions/cache@v2
        id: cache-modules
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key:
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-

      - name: Get Current Pull Request ðŸ“‘
        uses: 8BitJonny/gh-get-current-pr@1.1.0
        id: pr
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          filterOutClosed: true

      - name: Install ðŸ’¿
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Build library ðŸ”¨
        run: yarn build

      - name: Configure npm ðŸ”‘
        run: |
          echo "//npm.pkg.github.com/:_authToken=$GH_TOKEN" > .npmrc
          echo '@trixtateam:registry=https://npm.pkg.github.com' >> .npmrc
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Release package ðŸ“¦
        run: yarn release --ignore-packages=packages/docs/**
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - if: always()
        run: rm .npmrc


